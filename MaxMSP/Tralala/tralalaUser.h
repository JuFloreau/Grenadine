/*
 *  tralalaUser.h
 *
 *  nicolas.danet@free.fr
 *
 */

// -------------------------------------------------------------------------------------------------------------
// -------------------------------------------------------------------------------------------------------------

#ifndef TLL_USER_H
#define TLL_USER_H

// -------------------------------------------------------------------------------------------------------------
// -------------------------------------------------------------------------------------------------------------

#include "tralala.h"

// -------------------------------------------------------------------------------------------------------------
// -------------------------------------------------------------------------------------------------------------
#pragma mark -

enum {
    TLL_SELECTED        = 1,
    TLL_UNSELECTED      = 2,
    TLL_SELECTED_LASSO  = 3,
    TLL_SELECTED_START  = 4,
    TLL_SELECTED_END    = 5,
    TLL_SELECTED_DOWN   = 6,
    TLL_SELECTED_UP     = 7
    };

// -------------------------------------------------------------------------------------------------------------
// -------------------------------------------------------------------------------------------------------------

#define TLL_DIRTY_NONE          0UL
#define TLL_DIRTY_ZONE          1UL
#define TLL_DIRTY_NOTE          2UL
#define TLL_DIRTY_LASSO         4UL
#define TLL_DIRTY_BACKGROUND    8UL

// -------------------------------------------------------------------------------------------------------------
// -------------------------------------------------------------------------------------------------------------
#pragma mark -

ulong tralala_userAbort (t_tll *x);

// -------------------------------------------------------------------------------------------------------------
// -------------------------------------------------------------------------------------------------------------
#pragma mark -

void tralala_key        (t_tll *x, t_object *pv, long keycode, long m, long textcharacter);
void tralala_mousewheel (t_tll *x, t_object *view, t_pt pt, long m, double x_inc, double y_inc);
void tralala_mousedown  (t_tll *x, t_object *pv, t_pt pt, long m);
void tralala_mousemove  (t_tll *x, t_object *pv, t_pt pt, long m);
void tralala_mousedrag  (t_tll *x, t_object *pv, t_pt pt, long m);
void tralala_mouseup    (t_tll *x, t_object *pv, t_pt pt, long m);

// -------------------------------------------------------------------------------------------------------------
// -------------------------------------------------------------------------------------------------------------
#endif // TLL_USER_H